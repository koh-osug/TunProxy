#include <gtest/gtest.h>
#include "tls.h"

static size_t from_hex(const char *hex, char *data) {
    char *pos = (char *)hex;
    size_t length = strlen(hex) / 2;
    size_t count;
    for (count = 0; count < length; count++) {
        sscanf(pos, "%2hhx", &data[count]);
        pos += 2;
    }
    return count;
}

TEST(TCP, TLS_SNI_1) {
    const char *hex = "1603010200010001fc03036188c95a77"
                      "fcbe3a6679ac1b68c2a559a2c892969c"
                      "358e0cf95b6a3441e719c920b6381928"
                      "61297a8d575269a2324856304c1470e8"
                      "056af481d14a872905ce08290020fafa"
                      "130113021303c02bc02fc02cc030cca9"
                      "cca8c013c014009c009d002f00350100"
                      "01934a4a00000000001a001800001577"
                      "6561746865722e6f706572612d617069"
                      "2e636f6d00170000ff01000100000a00"
                      "0a0008eaea001d00170018000b000201"
                      "00002300000010000e000c0268320868"
                      "7474702f312e31000500050100000000"
                      "000d0012001004030804040105030805"
                      "050108060601001200000033002b0029"
                      "eaea000100001d00209df3c000b2727c"
                      "c07c689caaab61f29e185ffd98f59b1b"
                      "5b8ee4c49389db1c2a002d0002010100"
                      "2b000b0a5a5a0304030303020301001b"
                      "00030200020a0a000100001500c70000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "00000000000000000000000000000000"
                      "0000000000";
    char data[1024];
    char hostname[512];
    memset(hostname, 0, sizeof(hostname));
    ssize_t length = from_hex(hex, data);
    parse_tls_header((const char *)data, length, hostname);
    EXPECT_STREQ("weather.opera-api.com", hostname);
    printf("Parsed Hostname: %s\n", hostname);
}

TEST(TCP, TLS_SNI_2) {
    const char *hex = "1603010200010001FC0303A0549D102F5DEDC13751DE828A616F8087E798BC1490FDE1843DB4C05557B16C20C3C6F7491268F1433C223EF21743561EAF43F0C4E97203CD2222B3E8733BDAE600224A4A130113021303C02BC02FC02CC030CCA9CCA8C013C014009C009D002F0035000A01000191CACA00000000001C001A00001763646E2E70726F642E7777772E7370696567656C2E646500170000FF01000100000A000A00084A4A001D00170018000B00020100002300000010000E000C02683208687474702F312E31000500050100000000000D00140012040308040401050308050501080606010201001200000033002B00294A4A000100001D0020DC";
    char data[1024];
    char hostname[512];
    memset(hostname, 0, sizeof(hostname));
    ssize_t length = from_hex(hex, data);
    parse_tls_header((const char *)data, length, hostname);
    EXPECT_STREQ("cdn.prod.www.spiegel.de", hostname);
    printf("Parsed Hostname: %s\n", hostname);
}

TEST(TCP, TLS_SNI_3) {
    const char *hex = "1603010200010001fc0303353ac59df02ff2f6bd9a03eaa1622b00fd420f735adee5a9de23a1cd365066ea208b91e70c037ccc82ac8947b9e0e3d7a1145fe62f555d817ce16799f2b034fc450020dada130113021303c02bc02fc02cc030cca9cca8c013c014009c009d002f003501000193fafa0000000000180016000013756e6167692d65752e616d617a6f6e2e636f6d00170000ff01000100000a000a00089a9a001d00170018000b00020100002300000010000e000c02683208687474702f312e31000500050100000000000d0012001004030804040105030805050108060601001200000033002b00299a9a000100001d00206a5ea51235e4d41204bf571b3dd931000c8e87aab05ff6c382b213bd84a04c32002d00020101002b000b0a9a9a0304030303020301001b00030200023a3a000100001500c9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    char data[1024];
    char hostname[512];
    memset(hostname, 0, sizeof(hostname));
    ssize_t length = from_hex(hex, data);
    parse_tls_header((const char *)data, length, hostname);
    EXPECT_STREQ("unagi-eu.amazon.com", hostname);
    printf("Parsed Hostname: %s\n", hostname);
}


TEST(TCP, TLS_SNI_4) {
    const char *hex = "1603010200010001fc03036e5f99c4a5a5e808cb90eb627f49e769a514bcb180b9fc515010e068247b85ce20f81f0f19ffddbeb094ac374200561ae2fd568fc7acf8920d82a8c7758b21af8c00208a8a130113021303c02bc02fc02cc030cca9cca8c013c014009c009d002f0035010001932a2a00000000001a00180000157570646174652e676f6f676c65617069732e636f6d00170000ff01000100000a000a00081a1a001d00170018000b00020100002300000010000e000c02683208687474702f312e31000500050100000000000d0012001004030804040105030805050108060601001200000033002b00291a1a000100001d0020dcf57e7bfb873711d6c5a84bf9438889e0f5e2e317319376456ab4c587685e52002d00020101002b000b0ababa0304030303020301001b00030200025a5a000100001500c700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    char data[1024];
    char hostname[512];
    memset(hostname, 0, sizeof(hostname));
    ssize_t length = from_hex(hex, data);
    parse_tls_header((const char *)data, length, hostname);
    EXPECT_STREQ("update.googleapis.com", hostname);
    printf("Parsed Hostname: %s\n", hostname);
}


TEST(TCP, TLS_SNI_5) {
    const char *hex
    char data[1024];
    char hostname[512];
    memset(hostname, 0, sizeof(hostname));
    ssize_t length = from_hex(hex, data);
    parse_tls_header((const char *)data, length, hostname);
    EXPECT_STREQ("news-af.feednews.com", hostname);
    printf("Parsed Hostname: %s\n", hostname);
}






