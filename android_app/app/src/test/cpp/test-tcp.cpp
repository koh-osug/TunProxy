#include <gtest/gtest.h>
#include "tls.h"

static char *from_hex(const char *hex) {
    const char *pos = hex;
    char *val = static_cast<char *>(malloc(strlen(hex)));
    for (size_t count = 0; count < sizeof val / sizeof *val; count++) {
        sscanf(pos, "%2hhx", &val[count]);
        pos += 2;
    }
    return val;
}

TEST(TCP, TLSHeader) {
    const char *hex = "16 03 01 02 00 01 00 01 fc 03 03 61 88 c9 5a 77"
                      "fc be 3a 66 79 ac 1b 68 c2 a5 59 a2 c8 92 96 9c"
                      "35 8e 0c f9 5b 6a 34 41 e7 19 c9 20 b6 38 19 28"
                      "61 29 7a 8d 57 52 69 a2 32 48 56 30 4c 14 70 e8"
                      "05 6a f4 81 d1 4a 87 29 05 ce 08 29 00 20 fa fa"
                      "13 01 13 02 13 03 c0 2b c0 2f c0 2c c0 30 cc a9"
                      "cc a8 c0 13 c0 14 00 9c 00 9d 00 2f 00 35 01 00"
                      "01 93 4a 4a 00 00 00 00 00 1a 00 18 00 00 15 77"
                      "65 61 74 68 65 72 2e 6f 70 65 72 61 2d 61 70 69"
                      "2e 63 6f 6d 00 17 00 00 ff 01 00 01 00 00 0a 00"
                      "0a 00 08 ea ea 00 1d 00 17 00 18 00 0b 00 02 01"
                      "00 00 23 00 00 00 10 00 0e 00 0c 02 68 32 08 68"
                      "74 74 70 2f 31 2e 31 00 05 00 05 01 00 00 00 00"
                      "00 0d 00 12 00 10 04 03 08 04 04 01 05 03 08 05"
                      "05 01 08 06 06 01 00 12 00 00 00 33 00 2b 00 29"
                      "ea ea 00 01 00 00 1d 00 20 9d f3 c0 00 b2 72 7c"
                      "c0 7c 68 9c aa ab 61 f2 9e 18 5f fd 98 f5 9b 1b"
                      "5b 8e e4 c4 93 89 db 1c 2a 00 2d 00 02 01 01 00"
                      "2b 00 0b 0a 5a 5a 03 04 03 03 03 02 03 01 00 1b"
                      "00 03 02 00 02 0a 0a 00 01 00 00 15 00 c7 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00"
                      "00 00 00 00 00";
    char *data = from_hex(hex);
    char hostname[512];
    parse_tls_header((const char *)data, (size_t)sizeof(data), hostname);
    free(data);
    EXPECT_STREQ("weather.opera-api.com", hostname);
}
